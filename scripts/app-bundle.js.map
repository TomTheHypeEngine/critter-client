{"version":3,"sources":["app.js","environment.js","home.js","main.js","resources/index.js","services/async-http-client.js","services/fixtures.js","services/messages.js","services/tweet-service.js","viewmodels/dashboard/dashboard.js","viewmodels/login/login.js","viewmodels/logout/logout.js","viewmodels/signup/signup.js","/home/thomas/Programmieren/WebstormProjects/critter-client/src/app.html","/home/thomas/Programmieren/WebstormProjects/critter-client/src/home.html","/home/thomas/Programmieren/WebstormProjects/critter-client/src/nav-bar.html","/home/thomas/Programmieren/WebstormProjects/critter-client/src/viewmodels/dashboard/dashboard.html","/home/thomas/Programmieren/WebstormProjects/critter-client/src/viewmodels/login/login.html","/home/thomas/Programmieren/WebstormProjects/critter-client/src/viewmodels/logout/logout.html","/home/thomas/Programmieren/WebstormProjects/critter-client/src/viewmodels/signup/signup.html"],"names":["App","ts","au","ea","subscribe","msg","status","success","setRoot","then","router","navigateToRoute","configureRouter","config","map","route","name","moduleId","nav","title","mapUnknownRoutes","attached","isAuthenticated","debug","testing","Home","aurelia","configure","Promise","warnings","wForgottenReturn","use","standardConfiguration","feature","developmentLogging","plugin","start","AsyncHttpClient","httpClient","fixtures","http","withBaseUrl","baseUrl","authenticate","url","user","post","response","content","localStorage","tweet","JSON","stringify","configuration","withHeader","token","publish","catch","message","clearAuthentication","authenticated","auth","parse","get","obj","delete","Fixtures","LoginStatus","TimelineUpdate","tweets","TweetService","data","ac","users","getUsers","res","returnedTweets","push","console","log","amount","candidate","firstName","lastName","method","register","email","password","newUser","login","logout","Dashboard","Login","tweetService","prompt","e","Logout","Signup","repeatPassword","showSignup"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;MAMaA,cAAAA,cADZ;AAGC,iBAAYC,EAAZ,EAAgBC,EAAhB,EAAoBC,EAApB,EAAwB;AAAA;;AAAA;;AACtB,WAAKD,EAAL,GAAUA,EAAV;AACA,WAAKD,EAAL,GAAUA,EAAV;AACAE,SAAGC,SAAH,wBAA0B,eAAO;AAC/B,YAAIC,IAAIC,MAAJ,CAAWC,OAAX,KAAuB,IAA3B,EAAiC;AAC/BL,aAAGM,OAAH,CAAW,MAAX,EAAmBC,IAAnB,CAAwB,YAAM;AAC5B,kBAAKC,MAAL,CAAYC,eAAZ,CAA4B,WAA5B;AACD,WAFD;AAGD,SAJD,MAIO;AACLT,aAAGM,OAAH,CAAW,KAAX,EAAkBC,IAAlB,CAAuB,YAAM;AAC3B,kBAAKC,MAAL,CAAYC,eAAZ,CAA4B,OAA5B;AACD,WAFD;AAGD;AACF,OAVD;AAWD;;kBAEDC,2CAAgBC,QAAQH,QAAQ;AAC9BG,aAAOC,GAAP,CAAW,CACT,EAAEC,OAAO,CAAC,EAAD,EAAK,OAAL,CAAT,EAAwBC,MAAM,OAA9B,EAAuCC,UAAU,wBAAjD,EAA2EC,KAAK,IAAhF,EAAsFC,OAAO,OAA7F,EADS,EAET,EAAEJ,OAAO,QAAT,EAAmBC,MAAM,QAAzB,EAAmCC,UAAU,0BAA7C,EAAyEC,KAAK,IAA9E,EAAoFC,OAAO,QAA3F,EAFS,CAAX;;AAKAN,aAAOO,gBAAP,CAAwB,uBAAe;AACrC,eAAO,OAAP;AACD,OAFD;;AAIA,WAAKV,MAAL,GAAcA,MAAd;AACD;;kBAEDW,+BAAW;AAAA;;AACT,UAAI,KAAKpB,EAAL,CAAQqB,eAAR,EAAJ,EAA+B;AAC7B,aAAKpB,EAAL,CAAQM,OAAR,CAAgB,WAAhB,EAA6BC,IAA7B,CAAkC,YAAM;AACtC,iBAAKC,MAAL,CAAYC,eAAZ,CAA4B,WAA5B;AACD,SAFD;AAGD;AACF;;;;;;;;;;;oBC3CY;AACbY,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;;;;;;;;;;;MCGFC,eAAAA,eADZ;AAGC,kBAAYvB,EAAZ,EAAgB;AAAA;;AACd,WAAKwB,OAAL,GAAexB,EAAf;AACD;;mBAEDU,2CAAgBC,QAAQH,QAAQ;AAC9BG,aAAOC,GAAP,CAAW,CACT,EAAEC,OAAO,CAAC,EAAD,EAAK,WAAL,CAAT,EAA4BC,MAAM,WAAlC,EAA+CC,UAAU,gCAAzD,EAA2FC,KAAK,IAAhG,EAAsGC,OAAO,WAA7G,EADS,EAKT,EAAEJ,OAAO,QAAT,EAAmBC,MAAM,QAAzB,EAAmCC,UAAU,0BAA7C,EAAyEC,KAAK,IAA9E,EAAoFC,OAAO,QAA3F,EALS,CAAX;;AAQAN,aAAOO,gBAAP,CAAwB,uBAAe;AACrC,eAAO,WAAP;AACD,OAFD;;AAIA,WAAKV,MAAL,GAAcA,MAAd;AACD;;;;;;;;;;;UCbaiB,YAAAA;;;;;;;;;;AANhBC,UAAQf,MAAR,CAAe;AACbgB,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASH,SAAT,CAAmBD,OAAnB,EAA4B;AACjCA,YAAQK,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYV,KAAhB,EAAuB;AACrBG,cAAQK,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYV,OAAhB,EAAyB;AACvBE,cAAQK,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDT,YAAQU,KAAR,GAAgB3B,IAAhB,CAAqB;AAAA,aAAMiB,QAAQlB,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCxBemB,YAAAA;AAAT,WAASA,SAAT,CAAmBd,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;;;;;;;;;;;;MCKoBwB,0BADpB;AAGC,6BAAYC,UAAZ,EAAwBC,QAAxB,EAAkCpC,EAAlC,EAAsC;AAAA;;AACpC,WAAKqC,IAAL,GAAYF,UAAZ;AACA,WAAKE,IAAL,CAAUb,SAAV,CAAoB,gBAAQ;AAC1Ba,aAAKC,WAAL,CAAiBF,SAASG,OAA1B;AACD,OAFD;AAGA,WAAKvC,EAAL,GAAUA,EAAV;AACD;;8BAEDwC,qCAAaC,KAAKC,MAAM;AAAA;;AACtB,WAAKL,IAAL,CAAUM,IAAV,CAAeF,GAAf,EAAoBC,IAApB,EAA0BpC,IAA1B,CAA+B,oBAAY;AACzC,YAAMH,SAASyC,SAASC,OAAxB;AACA,YAAI1C,OAAOC,OAAX,EAAoB;AAClB0C,uBAAaC,KAAb,GAAqBC,KAAKC,SAAL,CAAeL,SAASC,OAAxB,CAArB;AACA,gBAAKR,IAAL,CAAUb,SAAV,CAAoB,yBAAiB;AACnC0B,0BAAcC,UAAd,CAAyB,eAAzB,EAA0C,WAAWP,SAASC,OAAT,CAAiBO,KAAtE;AACD,WAFD;AAGD;AACD,cAAKpD,EAAL,CAAQqD,OAAR,CAAgB,0BAAgBlD,MAAhB,CAAhB;AACD,OATD,EASGmD,KATH,CASS,iBAAS;AAChB,YAAMnD,SAAS;AACbC,mBAAS,KADI;AAEbmD,mBAAS;AAFI,SAAf;AAIA,cAAKvD,EAAL,CAAQqD,OAAR,CAAgB,0BAAgBlD,MAAhB,CAAhB;AACD,OAfD;AAgBD;;8BAEDqD,qDAAsB;AACpBV,mBAAaC,KAAb,GAAqB,IAArB;AACA,WAAKV,IAAL,CAAUb,SAAV,CAAoB,yBAAiB;AACnC0B,sBAAcC,UAAd,CAAyB,eAAzB,EAA0C,EAA1C;AACD,OAFD;AAGD;;8BAEDhC,6CAAkB;AAChB,UAAIsC,gBAAgB,KAApB;AACA,UAAIX,aAAaC,KAAb,KAAuB,MAA3B,EAAmC;AACjCU,wBAAgB,IAAhB;AACA,aAAKpB,IAAL,CAAUb,SAAV,CAAoB,gBAAQ;AAC1B,cAAMkC,OAAOV,KAAKW,KAAL,CAAWb,aAAaC,KAAxB,CAAb;AACAV,eAAKc,UAAL,CAAgB,eAAhB,EAAiCO,KAAKN,KAAtC;AACD,SAHD;AAID;AACD,aAAOK,aAAP;AACD;;8BAEDG,mBAAInB,KAAK;AACP,aAAO,KAAKJ,IAAL,CAAUuB,GAAV,CAAcnB,GAAd,CAAP;AACD;;8BAEDE,qBAAKF,KAAKoB,KAAK;AACb,aAAO,KAAKxB,IAAL,CAAUM,IAAV,CAAeF,GAAf,EAAoBoB,GAApB,CAAP;AACD;;8BAEDC,0BAAOrB,KAAK;AACV,aAAO,KAAKJ,IAAL,CAAUyB,MAAV,CAAiBrB,GAAjB,CAAP;AACD;;;;oBA1DkBP;;;;;;;;;;;;;;;MCPA6B;;;SAGnBxB,UAAU;;;oBAHSwB;;;;;;;;;;;;;;;MCARC,sBAAAA,cACX,qBAAY7D,MAAZ,EAAoB;AAAA;;AAClB,SAAKA,MAAL,GAAcA,MAAd;AACD;;MAGU8D,yBAAAA,iBACX,wBAAYC,MAAZ,EAAoB;AAAA;;AAClB,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCFkBC,uBADpB;AAMC,0BAAYC,IAAZ,EAAkBpE,EAAlB,EAAsBqE,EAAtB,EAA0B;AAAA;;AAAA,WAH1BH,MAG0B,GAHjB,EAGiB;AAAA,WAF1BI,KAE0B,GAFlB,EAEkB;;AAExB,WAAKtE,EAAL,GAAUA,EAAV;AACA,WAAKqE,EAAL,GAAUA,EAAV;AACD;;2BAEDE,+BAAW;AAAA;;AACT,WAAKF,EAAL,CAAQT,GAAR,CAAY,YAAZ,EAA0BtD,IAA1B,CAA+B,eAAO;AACpC,cAAKgE,KAAL,GAAaE,IAAI3B,OAAjB;AACD,OAFD;AAGD;;2BAEDE,uBAAMF,SAAS;AAAA;;AACb,UAAME,QAAQ;AACZF,iBAASA;AADG,OAAd;AAGA,WAAKwB,EAAL,CAAQ1B,IAAR,CAAa,aAAb,EAA4BI,KAA5B,EAAmCzC,IAAnC,CAAwC,eAAO;AAC7C,YAAMmE,iBAAiBD,IAAI3B,OAA3B;AACA,eAAKqB,MAAL,CAAYQ,IAAZ,CAAiBD,cAAjB;AACAE,gBAAQC,GAAR,CAAYC,SAAS,cAAT,GAA0BC,UAAUC,SAApC,GAAgD,GAAhD,GAAsDD,UAAUE,QAAhE,GAA2E,IAA3E,GAAkFC,MAA9F;AACAN,gBAAQC,GAAR,CAAY,6BAA6B/B,OAAzC;AACA,eAAK7C,EAAL,CAAQqD,OAAR,CAAgB,IAAIY,cAAJ,CAAmB,OAAKC,MAAxB,CAAhB;AACD,OAND;AAOD;;2BAED/C,6CAAkB;AAChB,aAAO,KAAKkD,EAAL,CAAQlD,eAAR,EAAP;AACD;;2BAED+D,6BAASH,WAAWC,UAAUG,OAAOC,UAAU;AAAA;;AAC7C,UAAMC,UAAU;AACdN,mBAAWA,SADG;AAEdC,kBAAUA,QAFI;AAGdG,eAAOA,KAHO;AAIdC,kBAAUA;AAJI,OAAhB;AAMA,WAAKf,EAAL,CAAQ1B,IAAR,CAAa,YAAb,EAA2B0C,OAA3B,EAAoC/E,IAApC,CAAyC,eAAO;AAC9C,eAAKiE,QAAL;AACD,OAFD;AAGD;;2BAEDe,uBAAMH,OAAOC,UAAU;AACrB,UAAM1C,OAAO;AACXyC,eAAOA,KADI;AAEXC,kBAAUA;AAFC,OAAb;AAIA,WAAKf,EAAL,CAAQ7B,YAAR,CAAqB,yBAArB,EAAgDE,IAAhD;AACA,WAAK4B,KAAL,GAAa,KAAKC,QAAL,EAAb;AACD;;2BAEDgB,2BAAS;AACP,UAAMpF,SAAS;AACbC,iBAAS,KADI;AAEbmD,iBAAS;AAFI,OAAf;AAIA,WAAKc,EAAL,CAAQb,mBAAR;AACA,WAAKxD,EAAL,CAAQqD,OAAR,CAAgB,0BAAgB,0BAAgBlD,MAAhB,CAAhB,CAAhB;AACD;;;;oBA9DkBgE;;;;;;;;;;;;;;;;;;;;;;;;;;MCHRqB,oBAAAA,oBADZ,qEAIC,mBAAY1F,EAAZ,EAAgB;AAAA;;AAAA,SAFhBwE,KAEgB,GAFR,EAEQ;;AACd,SAAKxE,EAAL,GAAUA,EAAV;AACA,SAAKwE,KAAL,GAAa,KAAKxE,EAAL,CAAQwE,KAArB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;MCNUmB,gBAAAA,gBADZ;AAMC,mBAAY3F,EAAZ,EAAgB;AAAA;;AAAA,WAHhBqF,KAGgB,GAHR,mBAGQ;AAAA,WAFhBC,QAEgB,GAFL,QAEK;;AACd,WAAKM,YAAL,GAAoB5F,EAApB;AACA,WAAK6F,MAAL,GAAc,EAAd;AACD;;oBAEDL,uBAAMM,GAAG;AACPjB,cAAQC,GAAR,uBAAgC,KAAKO,KAArC;AACA,WAAKO,YAAL,CAAkBJ,KAAlB,CAAwB,KAAKH,KAA7B,EAAoC,KAAKC,QAAzC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCbUS,iBAAAA,iBADZ;AAGC,oBAAYH,YAAZ,EAA0B;AAAA;;AACxB,WAAKA,YAAL,GAAoBA,YAApB;AACD;;qBAEDH,2BAAS;AACPZ,cAAQC,GAAR,CAAY,aAAZ;AACA,WAAKc,YAAL,CAAkBH,MAAlB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCTUO,iBAAAA,iBADZ;AASC,oBAAYhG,EAAZ,EAAgB;AAAA;;AAAA,WANhBiF,SAMgB,GANJ,OAMI;AAAA,WALhBC,QAKgB,GALL,SAKK;AAAA,WAJhBG,KAIgB,GAJR,mBAIQ;AAAA,WAHhBC,QAGgB,GAHL,QAGK;AAAA,WAFhBW,cAEgB,GAFC,QAED;;AACd,WAAKL,YAAL,GAAoB5F,EAApB;AACD;;qBAEDoF,6BAASU,GAAG;AACV,WAAKI,UAAL,GAAkB,KAAlB;AACA,UAAI,KAAKZ,QAAL,KAAkB,KAAKW,cAA3B,EAA2C;AACzC,aAAKL,YAAL,CAAkBR,QAAlB,CAA2B,KAAKH,SAAhC,EAA2C,KAAKC,QAAhD,EAA0D,KAAKG,KAA/D,EAAsE,KAAKC,QAA3E;AACA,aAAKM,YAAL,CAAkBJ,KAAlB,CAAwB,KAAKH,KAA7B,EAAoC,KAAKC,QAAzC;AACD;AACF;;;;;ACtBH;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA","file":"app-bundle.js","sourcesContent":["import {inject, Aurelia} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus} from './services/messages';\nimport TweetService from './services/tweet-service';\n\n@inject(TweetService, Aurelia, EventAggregator)\nexport class App {\n\n  constructor(ts, au, ea) {\n    this.au = au;\n    this.ts = ts;\n    ea.subscribe(LoginStatus, msg => {\n      if (msg.status.success === true) {\n        au.setRoot('home').then(() => {\n          this.router.navigateToRoute('dashboard');\n        });\n      } else {\n        au.setRoot('app').then(() => {\n          this.router.navigateToRoute('login');\n        });\n      }\n    });\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      { route: ['', 'login'], name: 'login', moduleId: 'viewmodels/login/login', nav: true, title: 'Login' },\n      { route: 'signup', name: 'signup', moduleId: 'viewmodels/signup/signup', nav: true, title: 'Signup' }\n    ]);\n\n    config.mapUnknownRoutes(instruction => {\n      return 'login';\n    });\n\n    this.router = router;\n  }\n\n  attached() {\n    if (this.ts.isAuthenticated()) {\n      this.au.setRoot('dashboard').then(() => {\n        this.router.navigateToRoute('dashboard');\n      });\n    }\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import { inject, Aurelia } from 'aurelia-framework';\n\n@inject(Aurelia)\nexport class Home {\n\n  constructor(au) {\n    this.aurelia = au;\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      { route: ['', 'dashboard'], name: 'Dashboard', moduleId: 'viewmodels/dashboard/dashboard', nav: true, title: 'Dashboard' },\n      // { route: 'report', name: 'report', moduleId: 'viewmodels/report/report', nav: true, title: 'Report' },\n      // { route: 'candidates', name: 'candidates', moduleId: 'viewmodels/candidates/candidates', nav: true, title: 'Candidates' },\n      // { route: 'stats', name: 'stats', moduleId: 'viewmodels/stats/stats', nav: true, title: 'Stats' },\n      { route: 'logout', name: 'logout', moduleId: 'viewmodels/logout/logout', nav: true, title: 'Logout' }\n    ]);\n\n    config.mapUnknownRoutes(instruction => {\n      return 'dashboard';\n    });\n\n    this.router = router;\n  }\n}\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\nimport Fixtures from './fixtures';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus} from './messages';\n\n@inject(HttpClient, Fixtures, EventAggregator )\nexport default class AsyncHttpClient {\n\n  constructor(httpClient, fixtures, ea) {\n    this.http = httpClient;\n    this.http.configure(http => {\n      http.withBaseUrl(fixtures.baseUrl);\n    });\n    this.ea = ea;\n  }\n\n  authenticate(url, user) {\n    this.http.post(url, user).then(response => {\n      const status = response.content;\n      if (status.success) {\n        localStorage.tweet = JSON.stringify(response.content);\n        this.http.configure(configuration => {\n          configuration.withHeader('Authorization', 'bearer' + response.content.token);\n        });\n      }\n      this.ea.publish(new LoginStatus(status));\n    }).catch(error => {\n      const status = {\n        success: false,\n        message: 'service not available'\n      };\n      this.ea.publish(new LoginStatus(status));\n    });\n  }\n\n  clearAuthentication() {\n    localStorage.tweet = null;\n    this.http.configure(configuration => {\n      configuration.withHeader('Authorization', '');\n    });\n  }\n\n  isAuthenticated() {\n    let authenticated = false;\n    if (localStorage.tweet !== 'null') {\n      authenticated = true;\n      this.http.configure(http => {\n        const auth = JSON.parse(localStorage.tweet);\n        http.withHeader('Authorization', auth.token);\n      });\n    }\n    return authenticated;\n  }\n\n  get(url) {\n    return this.http.get(url);\n  }\n\n  post(url, obj) {\n    return this.http.post(url, obj);\n  }\n\n  delete(url) {\n    return this.http.delete(url);\n  }\n}\n","export default class Fixtures {\n\n  //baseUrl = 'http://localhost:5000';\n  baseUrl = 'https://critter-tweet-api.herokuapp.com';\n}\n","export class LoginStatus {\n  constructor(status) {\n    this.status = status;\n  }\n}\n\nexport class TimelineUpdate {\n  constructor(tweets) {\n    this.tweets = tweets;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport Fixtures from './fixtures';\nimport {LoginStatus} from './messages';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport AsyncHttpClient from './async-http-client';\n\n@inject(Fixtures, EventAggregator, AsyncHttpClient)\nexport default class TweetService {\n\n  tweets = [];\n  users = [];\n\n  constructor(data, ea, ac) {\n    // this.methods = data.methods;\n    this.ea = ea;\n    this.ac = ac;\n  }\n\n  getUsers() {\n    this.ac.get('/api/users').then(res => {\n      this.users = res.content;\n    });\n  }\n\n  tweet(content) {\n    const tweet = {\n      content: content\n    };\n    this.ac.post('/api/tweets', tweet).then(res => {\n      const returnedTweets = res.content;\n      this.tweets.push(returnedTweets);\n      console.log(amount + ' donated to ' + candidate.firstName + ' ' + candidate.lastName + ': ' + method);\n      console.log('Tweet created with text ' + content);\n      this.ea.publish(new TimelineUpdate(this.tweets));\n    });\n  }\n\n  isAuthenticated() {\n    return this.ac.isAuthenticated();\n  }\n\n  register(firstName, lastName, email, password) {\n    const newUser = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password\n    };\n    this.ac.post('/api/users', newUser).then(res => {\n      this.getUsers();\n    });\n  }\n\n  login(email, password) {\n    const user = {\n      email: email,\n      password: password\n    };\n    this.ac.authenticate('/api/users/authenticate', user);\n    this.users = this.getUsers();\n  }\n\n  logout() {\n    const status = {\n      success: false,\n      message: ''\n    };\n    this.ac.clearAuthentication();\n    this.ea.publish(new LoginStatus(new LoginStatus(status)));\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\n\n@inject(TweetService)\nexport class Dashboard {\n  users = [];\n\n  constructor(ts) {\n    this.ts = ts;\n    this.users = this.ts.users;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\n\n@inject(TweetService)\nexport class Login {\n\n  email = 'marge@simpson.com';\n  password = 'secret';\n\n  constructor(ts) {\n    this.tweetService = ts;\n    this.prompt = '';\n  }\n\n  login(e) {\n    console.log(`Trying to log in ${this.email}`);\n    this.tweetService.login(this.email, this.password);\n  }\n}\n","import TweetService from '../../services/tweet-service';\nimport {inject} from 'aurelia-framework';\n\n@inject(TweetService)\nexport class Logout {\n\n  constructor(tweetService) {\n    this.tweetService = tweetService;\n  }\n\n  logout() {\n    console.log('logging out');\n    this.tweetService.logout();\n  }\n}\n\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\n\n@inject(TweetService)\nexport class Signup {\n\n  firstName = 'Marge';\n  lastName = 'Simpson';\n  email = 'marge@simpson.com';\n  password = 'secret';\n  repeatPassword = 'secret';\n\n  constructor(ts) {\n    this.tweetService = ts;\n  }\n\n  register(e) {\n    this.showSignup = false;\n    if (this.password === this.repeatPassword) {\n      this.tweetService.register(this.firstName, this.lastName, this.email, this.password);\n      this.tweetService.login(this.email, this.password);\n    }\n  }\n}\n",null,null,null,null,null,null,null],"sourceRoot":"../src"}